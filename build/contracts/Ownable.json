{
  "contractName": "Ownable",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ConsumerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ConsumerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "DistributorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "DistributorRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "FarmerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "FarmerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "RetailerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "RetailerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferOwnership",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addConsumer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addFarmer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addRetailer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isConsumer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isDistributor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isFarmer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isRetailer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceConsumer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceFarmer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceRetailer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ConsumerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ConsumerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"DistributorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"DistributorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"FarmerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"FarmerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RetailerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RetailerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addFarmer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addRetailer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isConsumer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isDistributor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isFarmer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isRetailer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceFarmer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceRetailer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Assign the contract to an owner\"},\"isOwner()\":{\"notice\":\"Check if the calling address is the owner of the contract\"},\"owner()\":{\"notice\":\"Look up the address of the owner\"},\"renounceOwnership()\":{\"notice\":\"Define a function to renounce ownerhip\"},\"transferOwnership(address)\":{\"notice\":\"Define a public function to transfer ownership\"}},\"notice\":\"Provides basic authorization control\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/coffeecore/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/coffeeaccesscontrol/ConsumerRole.sol\":{\"keccak256\":\"0xb0270da75cfca88187959be61f7632fc86b7830c28f0ec4c22616f1b3d9ff0bc\",\"license\":\"Vimal Kumar\",\"urls\":[\"bzz-raw://473ce3c096a43d74fa1e863dc0fe54ff7b2c0861cc6b142ac354bc412b928667\",\"dweb:/ipfs/QmP7hg7Goeyn8nGNz5gCA6eLVUAms2Ran76oHasCpoZj5S\"]},\"project:/contracts/coffeeaccesscontrol/DistributorRole.sol\":{\"keccak256\":\"0x944fb5a3019cf86dddf57fd3461d18292edb77e70841bb905ea3f9c4f8e7d41b\",\"license\":\"Vimal Kumar\",\"urls\":[\"bzz-raw://68e5256679c63b118a229b2ee914328ccc5da811fad15a18993142244395b3cb\",\"dweb:/ipfs/QmTLAaNr7o2NJGj9DFBX3G6tqqei7cRtFT4CqLjWtVfgZi\"]},\"project:/contracts/coffeeaccesscontrol/FarmerRole.sol\":{\"keccak256\":\"0x930e338a38f55fbd32c54e1c579dbc42a4df6958c265659913ce6e09a8901119\",\"license\":\"Vimal Kumar\",\"urls\":[\"bzz-raw://d1ae0f5e558765addaaa6bd43dc1b48dc0517d45912f7cce66fa27aab265c09a\",\"dweb:/ipfs/QmbycLYAF2aqbTarVwD68RKQW3WRGX4PnMK1cJ4FrwEJAJ\"]},\"project:/contracts/coffeeaccesscontrol/RetailerRole.sol\":{\"keccak256\":\"0xc34ff5e27110f323aad25c1a162a56f6063675a70fd0410c541b249300782df3\",\"license\":\"Vimal Kumar\",\"urls\":[\"bzz-raw://3d255f7a61df412423969b73dcaee1dcc8c74b612e05e08596b5b1d8a6c68b52\",\"dweb:/ipfs/QmQwj2rZHcdMdbnpPCpa7rFjZHnAG6aot7r6Yd7widZFMw\"]},\"project:/contracts/coffeeaccesscontrol/Roles.sol\":{\"keccak256\":\"0x9097b9730fc5988813a3b79867c5ee32694988f9b64256d5853f15e630fc82c6\",\"license\":\"Vimal Kumar\",\"urls\":[\"bzz-raw://f70fce2a6fa95fdddc99fd02e45b8662ab6620d48a2f78e68ca13e3c6946d37b\",\"dweb:/ipfs/QmWEnnZgVes3yefs7ZcEQcgy2UavFKAyaMrk4wYjzYyFPj\"]},\"project:/contracts/coffeecore/Ownable.sol\":{\"keccak256\":\"0x69e70f0a0522840336c4323d3886a58581c944775ed37cf675643d18369c37f9\",\"license\":\"Vimal Kumar\",\"urls\":[\"bzz-raw://0622e3881475e05fdcd2f0f81944e1cff861f45a75ceddfeb393c8f9c2776df5\",\"dweb:/ipfs/QmajSav2Hb83Hd3Ckxy8ssjUPUjeKWtngw7iW7LAX1bMNa\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5062000023336200011a60201b60201c565b62000034336200017b60201b60201c565b6200004533620001dc60201b60201c565b62000056336200023d60201b60201c565b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a3620003e5565b620001358160006200029e60201b620005ea1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f28b26e7a3d20aedbc5f8f2ebf7da671c0491723a2b78f47a097b0e46dee0714260405160405180910390a250565b620001968160016200029e60201b620005ea1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167fddbf200aa634dc3fb81cfd68583dd1040d1c751d335e1d86b631bde3e977fea860405160405180910390a250565b620001f78160026200029e60201b620005ea1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f2e0ded4123377a3c2bc9a26f1717655a129e2f20752924d42e730ec89c83dbd060405160405180910390a250565b620002588160036200029e60201b620005ea1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f71ae26cad02663e3d92efd6ec56031a80d74a20c0ab4183faa8bf262261c9baa60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620002d857600080fd5b620002ea82826200035360201b60201c565b15620002f557600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200038e57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610e1480620003f56000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063834ff739116100975780638f32d59b116100665780638f32d59b1461024b578063b942906914610269578063db0e6a2f14610299578063f2fde38b146102a357610100565b8063834ff739146101b15780638da5cb5b146101e15780638ec4f505146101ff5780638f0c86fa1461021b57610100565b8063715018a6116100d3578063715018a6146101655780637250e2241461016f57806380c3f96d1461018b57806380fc0ce4146101a757610100565b8063112940f9146101055780635da09b881461012157806361e6982d14610151578063644241db1461015b575b600080fd5b61011f600480360381019061011a9190610bfc565b6102bf565b005b61013b60048036038101906101369190610bfc565b610313565b6040516101489190610c44565b60405180910390f35b610159610330565b005b61016361033b565b005b61016d610346565b005b61018960048036038101906101849190610bfc565b610418565b005b6101a560048036038101906101a09190610bfc565b61046c565b005b6101af61048a565b005b6101cb60048036038101906101c69190610bfc565b610495565b6040516101d89190610c44565b60405180910390f35b6101e96104b2565b6040516101f69190610c6e565b60405180910390f35b61021960048036038101906102149190610bfc565b6104dc565b005b61023560048036038101906102309190610bfc565b610530565b6040516102429190610c44565b60405180910390f35b61025361054d565b6040516102609190610c44565b60405180910390f35b610283600480360381019061027e9190610bfc565b6105a5565b6040516102909190610c44565b60405180910390f35b6102a16105c2565b005b6102bd60048036038101906102b89190610bfc565b6105cd565b005b6102c833610495565b610307576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fe90610ce6565b60405180910390fd5b61031081610695565b50565b60006103298260036106ef90919063ffffffff16565b9050919050565b61033933610780565b565b610344336107da565b565b61034e61054d565b61035757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a36000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61042133610530565b610460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045790610d52565b60405180910390fd5b61046981610834565b50565b610475336105a5565b61047e57600080fd5b6104878161088e565b50565b610493336108e8565b565b60006104ab8260006106ef90919063ffffffff16565b9050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104e533610313565b610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b90610dbe565b60405180910390fd5b61052d81610942565b50565b60006105468260016106ef90919063ffffffff16565b9050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60006105bb8260026106ef90919063ffffffff16565b9050919050565b6105cb3361099c565b565b6105d561054d565b6105de57600080fd5b6105e7816109f6565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361062357600080fd5b61062d82826106ef565b1561063757600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6106a98160006105ea90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f28b26e7a3d20aedbc5f8f2ebf7da671c0491723a2b78f47a097b0e46dee0714260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361072957600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610794816000610aef90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe3f5ed5f263f1f01764a96edfc7d025f511ec5f7d180e8816908b78bcf74f09860405160405180910390a250565b6107ee816001610aef90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f126174f6cf49c81cdb4a9214c6b8f037bef55b4ec31e4fc776cea2a1c8a88d5960405160405180910390a250565b6108488160016105ea90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fddbf200aa634dc3fb81cfd68583dd1040d1c751d335e1d86b631bde3e977fea860405160405180910390a250565b6108a28160026105ea90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f2e0ded4123377a3c2bc9a26f1717655a129e2f20752924d42e730ec89c83dbd060405160405180910390a250565b6108fc816002610aef90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fa5e0f060af304ab17dd418c7927e3da3ae7868189bf387aee09ab179ccc572f260405160405180910390a250565b6109568160036105ea90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f71ae26cad02663e3d92efd6ec56031a80d74a20c0ab4183faa8bf262261c9baa60405160405180910390a250565b6109b0816003610aef90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fdb7176e79cffef81cb01767dd0447a0b24bb72ca9778d4b245581086b2a7e6db60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a2f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a380600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b2857600080fd5b610b3282826106ef565b610b3b57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bc982610b9e565b9050919050565b610bd981610bbe565b8114610be457600080fd5b50565b600081359050610bf681610bd0565b92915050565b600060208284031215610c1257610c11610b99565b5b6000610c2084828501610be7565b91505092915050565b60008115159050919050565b610c3e81610c29565b82525050565b6000602082019050610c596000830184610c35565b92915050565b610c6881610bbe565b82525050565b6000602082019050610c836000830184610c5f565b92915050565b600082825260208201905092915050565b7f4e6f7420636f6e73756d65720000000000000000000000000000000000000000600082015250565b6000610cd0600c83610c89565b9150610cdb82610c9a565b602082019050919050565b60006020820190508181036000830152610cff81610cc3565b9050919050565b7f4e6f74206469737472696275746f720000000000000000000000000000000000600082015250565b6000610d3c600f83610c89565b9150610d4782610d06565b602082019050919050565b60006020820190508181036000830152610d6b81610d2f565b9050919050565b7f4e6f742072657461696c65720000000000000000000000000000000000000000600082015250565b6000610da8600c83610c89565b9150610db382610d72565b602082019050919050565b60006020820190508181036000830152610dd781610d9b565b905091905056fea2646970667358221220e99b4cb71a8796abf6fa1d111ff3e65d89e7425ebaa07034f1ab935d702be67a64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c8063834ff739116100975780638f32d59b116100665780638f32d59b1461024b578063b942906914610269578063db0e6a2f14610299578063f2fde38b146102a357610100565b8063834ff739146101b15780638da5cb5b146101e15780638ec4f505146101ff5780638f0c86fa1461021b57610100565b8063715018a6116100d3578063715018a6146101655780637250e2241461016f57806380c3f96d1461018b57806380fc0ce4146101a757610100565b8063112940f9146101055780635da09b881461012157806361e6982d14610151578063644241db1461015b575b600080fd5b61011f600480360381019061011a9190610bfc565b6102bf565b005b61013b60048036038101906101369190610bfc565b610313565b6040516101489190610c44565b60405180910390f35b610159610330565b005b61016361033b565b005b61016d610346565b005b61018960048036038101906101849190610bfc565b610418565b005b6101a560048036038101906101a09190610bfc565b61046c565b005b6101af61048a565b005b6101cb60048036038101906101c69190610bfc565b610495565b6040516101d89190610c44565b60405180910390f35b6101e96104b2565b6040516101f69190610c6e565b60405180910390f35b61021960048036038101906102149190610bfc565b6104dc565b005b61023560048036038101906102309190610bfc565b610530565b6040516102429190610c44565b60405180910390f35b61025361054d565b6040516102609190610c44565b60405180910390f35b610283600480360381019061027e9190610bfc565b6105a5565b6040516102909190610c44565b60405180910390f35b6102a16105c2565b005b6102bd60048036038101906102b89190610bfc565b6105cd565b005b6102c833610495565b610307576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fe90610ce6565b60405180910390fd5b61031081610695565b50565b60006103298260036106ef90919063ffffffff16565b9050919050565b61033933610780565b565b610344336107da565b565b61034e61054d565b61035757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a36000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61042133610530565b610460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045790610d52565b60405180910390fd5b61046981610834565b50565b610475336105a5565b61047e57600080fd5b6104878161088e565b50565b610493336108e8565b565b60006104ab8260006106ef90919063ffffffff16565b9050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104e533610313565b610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b90610dbe565b60405180910390fd5b61052d81610942565b50565b60006105468260016106ef90919063ffffffff16565b9050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60006105bb8260026106ef90919063ffffffff16565b9050919050565b6105cb3361099c565b565b6105d561054d565b6105de57600080fd5b6105e7816109f6565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361062357600080fd5b61062d82826106ef565b1561063757600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6106a98160006105ea90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f28b26e7a3d20aedbc5f8f2ebf7da671c0491723a2b78f47a097b0e46dee0714260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361072957600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610794816000610aef90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe3f5ed5f263f1f01764a96edfc7d025f511ec5f7d180e8816908b78bcf74f09860405160405180910390a250565b6107ee816001610aef90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f126174f6cf49c81cdb4a9214c6b8f037bef55b4ec31e4fc776cea2a1c8a88d5960405160405180910390a250565b6108488160016105ea90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fddbf200aa634dc3fb81cfd68583dd1040d1c751d335e1d86b631bde3e977fea860405160405180910390a250565b6108a28160026105ea90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f2e0ded4123377a3c2bc9a26f1717655a129e2f20752924d42e730ec89c83dbd060405160405180910390a250565b6108fc816002610aef90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fa5e0f060af304ab17dd418c7927e3da3ae7868189bf387aee09ab179ccc572f260405160405180910390a250565b6109568160036105ea90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f71ae26cad02663e3d92efd6ec56031a80d74a20c0ab4183faa8bf262261c9baa60405160405180910390a250565b6109b0816003610aef90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fdb7176e79cffef81cb01767dd0447a0b24bb72ca9778d4b245581086b2a7e6db60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a2f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a380600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b2857600080fd5b610b3282826106ef565b610b3b57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bc982610b9e565b9050919050565b610bd981610bbe565b8114610be457600080fd5b50565b600081359050610bf681610bd0565b92915050565b600060208284031215610c1257610c11610b99565b5b6000610c2084828501610be7565b91505092915050565b60008115159050919050565b610c3e81610c29565b82525050565b6000602082019050610c596000830184610c35565b92915050565b610c6881610bbe565b82525050565b6000602082019050610c836000830184610c5f565b92915050565b600082825260208201905092915050565b7f4e6f7420636f6e73756d65720000000000000000000000000000000000000000600082015250565b6000610cd0600c83610c89565b9150610cdb82610c9a565b602082019050919050565b60006020820190508181036000830152610cff81610cc3565b9050919050565b7f4e6f74206469737472696275746f720000000000000000000000000000000000600082015250565b6000610d3c600f83610c89565b9150610d4782610d06565b602082019050919050565b60006020820190508181036000830152610d6b81610d2f565b9050919050565b7f4e6f742072657461696c65720000000000000000000000000000000000000000600082015250565b6000610da8600c83610c89565b9150610db382610d72565b602082019050919050565b60006020820190508181036000830152610dd781610d9b565b905091905056fea2646970667358221220e99b4cb71a8796abf6fa1d111ff3e65d89e7425ebaa07034f1ab935d702be67a64736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5025:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:8",
                "type": ""
              }
            ],
            "src": "7:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:8",
                "type": ""
              }
            ],
            "src": "334:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:8",
                "type": ""
              }
            ],
            "src": "466:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:8",
                "type": ""
              }
            ],
            "src": "568:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:8",
                "type": ""
              }
            ],
            "src": "696:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:8",
                "type": ""
              }
            ],
            "src": "841:329:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1218:48:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1228:32:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1253:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1246:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1239:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:21:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1228:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1200:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1210:7:8",
                "type": ""
              }
            ],
            "src": "1176:90:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1331:50:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1348:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1368:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1353:14:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1353:21:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1341:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1341:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1341:34:8"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1319:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1326:3:8",
                "type": ""
              }
            ],
            "src": "1272:109:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1479:118:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1489:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1501:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1512:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1497:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1497:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1489:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1563:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1576:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1587:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1572:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1572:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1525:37:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:65:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1525:65:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1451:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1463:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1474:4:8",
                "type": ""
              }
            ],
            "src": "1387:210:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1668:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1685:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1708:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1690:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1690:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1678:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1678:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1678:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1656:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1663:3:8",
                "type": ""
              }
            ],
            "src": "1603:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1825:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1835:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1847:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1858:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1843:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1843:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1835:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1915:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1928:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1939:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1924:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1924:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1871:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1871:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1871:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1797:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1809:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1820:4:8",
                "type": ""
              }
            ],
            "src": "1727:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2051:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2068:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2073:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2061:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2061:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2061:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2089:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2108:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2113:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2104:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2104:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2089:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2023:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2028:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2039:11:8",
                "type": ""
              }
            ],
            "src": "1955:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2236:56:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2258:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2266:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2254:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2254:14:8"
                      },
                      {
                        "hexValue": "4e6f7420636f6e73756d6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2270:14:8",
                        "type": "",
                        "value": "Not consumer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2247:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2247:38:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2247:38:8"
                }
              ]
            },
            "name": "store_literal_in_memory_4796ea31824d611d6e9977a4e2b0e269f22949efed608a1358dd025591112634",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2228:6:8",
                "type": ""
              }
            ],
            "src": "2130:162:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2444:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2454:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2520:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2525:2:8",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2461:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2461:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2454:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2626:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4796ea31824d611d6e9977a4e2b0e269f22949efed608a1358dd025591112634",
                      "nodeType": "YulIdentifier",
                      "src": "2537:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2537:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2537:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2639:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2650:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2655:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2646:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2646:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2639:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4796ea31824d611d6e9977a4e2b0e269f22949efed608a1358dd025591112634_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2432:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2440:3:8",
                "type": ""
              }
            ],
            "src": "2298:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2841:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2851:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2863:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2874:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2859:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2859:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2851:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2898:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2909:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2894:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2894:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2917:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2923:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2913:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2913:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2887:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2887:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2887:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2943:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3077:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4796ea31824d611d6e9977a4e2b0e269f22949efed608a1358dd025591112634_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2951:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2951:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2943:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4796ea31824d611d6e9977a4e2b0e269f22949efed608a1358dd025591112634__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2821:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2836:4:8",
                "type": ""
              }
            ],
            "src": "2670:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3201:59:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3223:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3231:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3219:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3219:14:8"
                      },
                      {
                        "hexValue": "4e6f74206469737472696275746f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3235:17:8",
                        "type": "",
                        "value": "Not distributor"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3212:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3212:41:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3212:41:8"
                }
              ]
            },
            "name": "store_literal_in_memory_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3193:6:8",
                "type": ""
              }
            ],
            "src": "3095:165:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3412:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3422:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3488:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3493:2:8",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3429:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3429:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3422:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3594:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab",
                      "nodeType": "YulIdentifier",
                      "src": "3505:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3505:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3505:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3607:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3618:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3623:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3614:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3614:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3607:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3400:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3408:3:8",
                "type": ""
              }
            ],
            "src": "3266:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3809:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3819:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3831:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3842:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3827:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3827:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3819:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3866:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3877:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3862:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3862:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3885:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3891:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3881:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3881:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3855:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3855:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3855:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3911:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4045:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3919:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3919:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3911:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3789:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3804:4:8",
                "type": ""
              }
            ],
            "src": "3638:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4169:56:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4191:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4199:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4187:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4187:14:8"
                      },
                      {
                        "hexValue": "4e6f742072657461696c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4203:14:8",
                        "type": "",
                        "value": "Not retailer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4180:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4180:38:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4180:38:8"
                }
              ]
            },
            "name": "store_literal_in_memory_691761e4ac316aaa4bccaba4f4bb514c14c1eed29465036f487a53401f3d7ebd",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4161:6:8",
                "type": ""
              }
            ],
            "src": "4063:162:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4377:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4387:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4453:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4458:2:8",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4394:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4394:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4387:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4559:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_691761e4ac316aaa4bccaba4f4bb514c14c1eed29465036f487a53401f3d7ebd",
                      "nodeType": "YulIdentifier",
                      "src": "4470:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4470:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4470:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4572:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4583:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4588:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4579:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4579:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4572:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_691761e4ac316aaa4bccaba4f4bb514c14c1eed29465036f487a53401f3d7ebd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4365:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4373:3:8",
                "type": ""
              }
            ],
            "src": "4231:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4774:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4784:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4796:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4807:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4792:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4792:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4784:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4831:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4842:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4827:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4827:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4850:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4856:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4846:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4846:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4820:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4820:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4820:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4876:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5010:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_691761e4ac316aaa4bccaba4f4bb514c14c1eed29465036f487a53401f3d7ebd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4884:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4884:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4876:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_691761e4ac316aaa4bccaba4f4bb514c14c1eed29465036f487a53401f3d7ebd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4754:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4769:4:8",
                "type": ""
              }
            ],
            "src": "4603:419:8"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4796ea31824d611d6e9977a4e2b0e269f22949efed608a1358dd025591112634(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not consumer\")\n\n    }\n\n    function abi_encode_t_stringliteral_4796ea31824d611d6e9977a4e2b0e269f22949efed608a1358dd025591112634_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_4796ea31824d611d6e9977a4e2b0e269f22949efed608a1358dd025591112634(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4796ea31824d611d6e9977a4e2b0e269f22949efed608a1358dd025591112634__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4796ea31824d611d6e9977a4e2b0e269f22949efed608a1358dd025591112634_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not distributor\")\n\n    }\n\n    function abi_encode_t_stringliteral_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_691761e4ac316aaa4bccaba4f4bb514c14c1eed29465036f487a53401f3d7ebd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not retailer\")\n\n    }\n\n    function abi_encode_t_stringliteral_691761e4ac316aaa4bccaba4f4bb514c14c1eed29465036f487a53401f3d7ebd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_691761e4ac316aaa4bccaba4f4bb514c14c1eed29465036f487a53401f3d7ebd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_691761e4ac316aaa4bccaba4f4bb514c14c1eed29465036f487a53401f3d7ebd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_691761e4ac316aaa4bccaba4f4bb514c14c1eed29465036f487a53401f3d7ebd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "309:1393:7:-:0;;;568:109;;;;;;;;;;640:24:1;653:10;640:12;;;:24;;:::i;:::-;656:27:2;672:10;656:15;;;:27;;:::i;:::-;631:22:3;642:10;631;;;:22;;:::i;:::-;642:24:4;655:10;642:12;;;:24;;:::i;:::-;605:10:7;593:9;;:22;;;;;;;;;;;;;;;;;;660:9;;;;;;;;;;;630:40;;656:1;630:40;;;;;;;;;;;;309:1393;;1395:114:1;1449:22;1463:7;1449:9;:13;;;;;;:22;;;;:::i;:::-;1496:7;1482:22;;;;;;;;;;;;1395:114;:::o;1454:125:2:-;1513:25;1530:7;1513:12;:16;;;;;;:25;;;;:::i;:::-;1566:7;1549:25;;;;;;;;;;;;1454:125;:::o;1337:108:3:-;1389:20;1401:7;1389;:11;;;;;;:20;;;;:::i;:::-;1432:7;1420:20;;;;;;;;;;;;1337:108;:::o;1395:114:4:-;1449:22;1463:7;1449:9;:13;;;;;;:22;;;;:::i;:::-;1496:7;1482:22;;;;;;;;;;;;1395:114;:::o;284:167:5:-;375:1;356:21;;:7;:21;;;348:30;;;;;;393:18;397:4;403:7;393:3;;;:18;;:::i;:::-;392:19;384:28;;;;;;442:4;419;:11;;:20;431:7;419:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;284:167;;:::o;765:166::-;849:4;890:1;871:21;;:7;:21;;;863:30;;;;;;906:4;:11;;:20;918:7;906:20;;;;;;;;;;;;;;;;;;;;;;;;;899:27;;765:166;;;;:::o;309:1393:7:-;;;;;;;",
  "deployedSourceMap": "309:1393:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1067:92:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;904:104:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1227:74:1;;;:::i;:::-;;1279:75:2;;;:::i;:::-;;1142:140:7;;;:::i;:::-;;1109:99:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1028:84:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1178:69;;;:::i;:::-;;902:104:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:80:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1069:90:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;935:110:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;996:93:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;869:100:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1227:74:4;;;:::i;:::-;;1343:107:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1067:92:1;792:22;803:10;792;:22::i;:::-;784:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1133:21:::1;1146:7;1133:12;:21::i;:::-;1067:92:::0;:::o;904:104:4:-;962:4;981:22;995:7;981:9;:13;;:22;;;;:::i;:::-;974:29;;904:104;;;:::o;1227:74:1:-;1269:27;1285:10;1269:15;:27::i;:::-;1227:74::o;1279:75:2:-;1319:30;1338:10;1319:18;:30::i;:::-;1279:75::o;1142:140:7:-;896:9;:7;:9::i;:::-;888:18;;;;;;1240:1:::1;1203:40;;1221:9;;;;;;;;;;;1203:40;;;;;;;;;;;;1273:1;1253:9;;:22;;;;;;;;;;;;;;;;;;1142:140::o:0;1109:99:2:-;816:25;830:10;816:13;:25::i;:::-;808:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1179:24:::1;1195:7;1179:15;:24::i;:::-;1109:99:::0;:::o;1028:84:3:-;779:20;788:10;779:8;:20::i;:::-;771:29;;;;;;1088:19:::1;1099:7;1088:10;:19::i;:::-;1028:84:::0;:::o;1178:69::-;1217:25;1231:10;1217:13;:25::i;:::-;1178:69::o;902:104:1:-;960:4;979:22;993:7;979:9;:13;;:22;;;;:::i;:::-;972:29;;902:104;;;:::o;724:80:7:-;762:7;788:9;;;;;;;;;;;781:16;;724:80;:::o;1069:90:4:-;794:22;805:10;794;:22::i;:::-;786:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1133:21:::1;1146:7;1133:12;:21::i;:::-;1069:90:::0;:::o;935:110:2:-;996:4;1015:25;1032:7;1015:12;:16;;:25;;;;:::i;:::-;1008:32;;935:110;;;:::o;996:93:7:-;1036:4;1073:9;;;;;;;;;;;1059:23;;:10;:23;;;1052:30;;996:93;:::o;869:100:3:-;925:4;944:20;956:7;944;:11;;:20;;;;:::i;:::-;937:27;;869:100;;;:::o;1227:74:4:-;1269:27;1285:10;1269:15;:27::i;:::-;1227:74::o;1343:107:7:-;896:9;:7;:9::i;:::-;888:18;;;;;;1415:28:::1;1434:8;1415:18;:28::i;:::-;1343:107:::0;:::o;284:167:5:-;375:1;356:21;;:7;:21;;;348:30;;;;;;393:18;397:4;403:7;393:3;:18::i;:::-;392:19;384:28;;;;;;442:4;419;:11;;:20;431:7;419:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;284:167;;:::o;1395:114:1:-;1449:22;1463:7;1449:9;:13;;:22;;;;:::i;:::-;1496:7;1482:22;;;;;;;;;;;;1395:114;:::o;765:166:5:-;849:4;890:1;871:21;;:7;:21;;;863:30;;;;;;906:4;:11;;:20;918:7;906:20;;;;;;;;;;;;;;;;;;;;;;;;;899:27;;765:166;;;;:::o;1612:122:1:-;1669:25;1686:7;1669:9;:16;;:25;;;;:::i;:::-;1721:7;1705:24;;;;;;;;;;;;1612:122;:::o;1688:133:2:-;1750:28;1770:7;1750:12;:19;;:28;;;;:::i;:::-;1808:7;1789:27;;;;;;;;;;;;1688:133;:::o;1454:125::-;1513:25;1530:7;1513:12;:16;;:25;;;;:::i;:::-;1566:7;1549:25;;;;;;;;;;;;1454:125;:::o;1337:108:3:-;1389:20;1401:7;1389;:11;;:20;;;;:::i;:::-;1432:7;1420:20;;;;;;;;;;;;1337:108;:::o;1544:116::-;1599:23;1614:7;1599;:14;;:23;;;;:::i;:::-;1647:7;1633:22;;;;;;;;;;;;1544:116;:::o;1395:114:4:-;1449:22;1463:7;1449:9;:13;;:22;;;;:::i;:::-;1496:7;1482:22;;;;;;;;;;;;1395:114;:::o;1612:122::-;1669:25;1686:7;1669:9;:16;;:25;;;;:::i;:::-;1721:7;1705:24;;;;;;;;;;;;1612:122;:::o;1514:186:7:-;1607:1;1587:22;;:8;:22;;;1579:31;;;;;;1654:8;1625:38;;1643:9;;;;;;;;;;;1625:38;;;;;;;;;;;;1685:8;1673:9;;:20;;;;;;;;;;;;;;;;;;1514:186;:::o;517:170:5:-;611:1;592:21;;:7;:21;;;584:30;;;;;;628:18;632:4;638:7;628:3;:18::i;:::-;620:27;;;;;;677:5;654:4;:11;;:20;666:7;654:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;517:170;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:118::-;1690:24;1708:5;1690:24;:::i;:::-;1685:3;1678:37;1603:118;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1727:222;;;;:::o;1955:169::-;2039:11;2073:6;2068:3;2061:19;2113:4;2108:3;2104:14;2089:29;;1955:169;;;;:::o;2130:162::-;2270:14;2266:1;2258:6;2254:14;2247:38;2130:162;:::o;2298:366::-;2440:3;2461:67;2525:2;2520:3;2461:67;:::i;:::-;2454:74;;2537:93;2626:3;2537:93;:::i;:::-;2655:2;2650:3;2646:12;2639:19;;2298:366;;;:::o;2670:419::-;2836:4;2874:2;2863:9;2859:18;2851:26;;2923:9;2917:4;2913:20;2909:1;2898:9;2894:17;2887:47;2951:131;3077:4;2951:131;:::i;:::-;2943:139;;2670:419;;;:::o;3095:165::-;3235:17;3231:1;3223:6;3219:14;3212:41;3095:165;:::o;3266:366::-;3408:3;3429:67;3493:2;3488:3;3429:67;:::i;:::-;3422:74;;3505:93;3594:3;3505:93;:::i;:::-;3623:2;3618:3;3614:12;3607:19;;3266:366;;;:::o;3638:419::-;3804:4;3842:2;3831:9;3827:18;3819:26;;3891:9;3885:4;3881:20;3877:1;3866:9;3862:17;3855:47;3919:131;4045:4;3919:131;:::i;:::-;3911:139;;3638:419;;;:::o;4063:162::-;4203:14;4199:1;4191:6;4187:14;4180:38;4063:162;:::o;4231:366::-;4373:3;4394:67;4458:2;4453:3;4394:67;:::i;:::-;4387:74;;4470:93;4559:3;4470:93;:::i;:::-;4588:2;4583:3;4579:12;4572:19;;4231:366;;;:::o;4603:419::-;4769:4;4807:2;4796:9;4792:18;4784:26;;4856:9;4850:4;4846:20;4842:1;4831:9;4827:17;4820:47;4884:131;5010:4;4884:131;:::i;:::-;4876:139;;4603:419;;;:::o",
  "source": "// SPDX-License-Identifier: Vimal Kumar\npragma solidity >=0.8.0;\n\nimport \"../coffeeaccesscontrol/ConsumerRole.sol\";\nimport \"../coffeeaccesscontrol/DistributorRole.sol\";\nimport \"../coffeeaccesscontrol/FarmerRole.sol\";\nimport \"../coffeeaccesscontrol/RetailerRole.sol\";\n\n/// Provides basic authorization control\ncontract Ownable is ConsumerRole, DistributorRole, FarmerRole, RetailerRole {\n    address private origOwner;\n\n    // Define an Event\n    event TransferOwnership(address indexed oldOwner, address indexed newOwner);\n\n    /// Assign the contract to an owner\n    constructor () {\n        origOwner = msg.sender;\n        emit TransferOwnership(address(0), origOwner);\n    }\n\n    /// Look up the address of the owner\n    function owner() public view returns (address) {\n        return origOwner;\n    }\n\n    /// Define a function modifier 'onlyOwner'\n    modifier onlyOwner() {\n        require(isOwner());\n        _;\n    }\n\n    /// Check if the calling address is the owner of the contract\n    function isOwner() public view returns (bool) {\n        return msg.sender == origOwner;\n    }\n\n    /// Define a function to renounce ownerhip\n    function renounceOwnership() public onlyOwner {\n        emit TransferOwnership(origOwner, address(0));\n        origOwner = address(0);\n    }\n\n    /// Define a public function to transfer ownership\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /// Define an internal function to transfer ownership\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0));\n        emit TransferOwnership(origOwner, newOwner);\n        origOwner = newOwner;\n    }\n}\n",
  "sourcePath": "/Users/vimal/dexter/udacity/blockchain/day3_lab/nd1309-Project-6b-Example-Template/project-6/contracts/coffeecore/Ownable.sol",
  "ast": {
    "absolutePath": "project:/contracts/coffeecore/Ownable.sol",
    "exportedSymbols": {
      "ConsumerRole": [
        163
      ],
      "DistributorRole": [
        269
      ],
      "FarmerRole": [
        374
      ],
      "Ownable": [
        1579
      ],
      "RetailerRole": [
        480
      ],
      "Roles": [
        584
      ]
    },
    "id": 1580,
    "license": "Vimal Kumar",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1448,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:24:7"
      },
      {
        "absolutePath": "project:/contracts/coffeeaccesscontrol/ConsumerRole.sol",
        "file": "../coffeeaccesscontrol/ConsumerRole.sol",
        "id": 1449,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1580,
        "sourceUnit": 164,
        "src": "66:49:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/coffeeaccesscontrol/DistributorRole.sol",
        "file": "../coffeeaccesscontrol/DistributorRole.sol",
        "id": 1450,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1580,
        "sourceUnit": 270,
        "src": "116:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/coffeeaccesscontrol/FarmerRole.sol",
        "file": "../coffeeaccesscontrol/FarmerRole.sol",
        "id": 1451,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1580,
        "sourceUnit": 375,
        "src": "169:47:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/coffeeaccesscontrol/RetailerRole.sol",
        "file": "../coffeeaccesscontrol/RetailerRole.sol",
        "id": 1452,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1580,
        "sourceUnit": 481,
        "src": "217:49:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1454,
              "name": "ConsumerRole",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 163,
              "src": "329:12:7"
            },
            "id": 1455,
            "nodeType": "InheritanceSpecifier",
            "src": "329:12:7"
          },
          {
            "baseName": {
              "id": 1456,
              "name": "DistributorRole",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 269,
              "src": "343:15:7"
            },
            "id": 1457,
            "nodeType": "InheritanceSpecifier",
            "src": "343:15:7"
          },
          {
            "baseName": {
              "id": 1458,
              "name": "FarmerRole",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 374,
              "src": "360:10:7"
            },
            "id": 1459,
            "nodeType": "InheritanceSpecifier",
            "src": "360:10:7"
          },
          {
            "baseName": {
              "id": 1460,
              "name": "RetailerRole",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 480,
              "src": "372:12:7"
            },
            "id": 1461,
            "nodeType": "InheritanceSpecifier",
            "src": "372:12:7"
          }
        ],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1453,
          "nodeType": "StructuredDocumentation",
          "src": "268:41:7",
          "text": "Provides basic authorization control"
        },
        "fullyImplemented": true,
        "id": 1579,
        "linearizedBaseContracts": [
          1579,
          480,
          374,
          269,
          163
        ],
        "name": "Ownable",
        "nameLocation": "318:7:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1463,
            "mutability": "mutable",
            "name": "origOwner",
            "nameLocation": "407:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 1579,
            "src": "391:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1462,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "391:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c",
            "id": 1469,
            "name": "TransferOwnership",
            "nameLocation": "452:17:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1465,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldOwner",
                  "nameLocation": "486:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1469,
                  "src": "470:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1467,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "512:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1469,
                  "src": "496:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "469:52:7"
            },
            "src": "446:76:7"
          },
          {
            "body": {
              "id": 1486,
              "nodeType": "Block",
              "src": "583:94:7",
              "statements": [
                {
                  "expression": {
                    "id": 1476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1473,
                      "name": "origOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1463,
                      "src": "593:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1474,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "605:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "605:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "593:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1477,
                  "nodeType": "ExpressionStatement",
                  "src": "593:22:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "656:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "648:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1479,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "648:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "648:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1483,
                        "name": "origOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "660:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1478,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1469,
                      "src": "630:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:40:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1485,
                  "nodeType": "EmitStatement",
                  "src": "625:45:7"
                }
              ]
            },
            "documentation": {
              "id": 1470,
              "nodeType": "StructuredDocumentation",
              "src": "528:35:7",
              "text": "Assign the contract to an owner"
            },
            "id": 1487,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "580:2:7"
            },
            "returnParameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:0:7"
            },
            "scope": 1579,
            "src": "568:109:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1495,
              "nodeType": "Block",
              "src": "771:33:7",
              "statements": [
                {
                  "expression": {
                    "id": 1493,
                    "name": "origOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1463,
                    "src": "788:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1492,
                  "id": 1494,
                  "nodeType": "Return",
                  "src": "781:16:7"
                }
              ]
            },
            "documentation": {
              "id": 1488,
              "nodeType": "StructuredDocumentation",
              "src": "683:36:7",
              "text": "Look up the address of the owner"
            },
            "functionSelector": "8da5cb5b",
            "id": 1496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "733:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:2:7"
            },
            "returnParameters": {
              "id": 1492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1491,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1496,
                  "src": "762:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "761:9:7"
            },
            "scope": 1579,
            "src": "724:80:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1505,
              "nodeType": "Block",
              "src": "878:46:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1500,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1518,
                          "src": "896:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "896:9:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "888:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "888:18:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1503,
                  "nodeType": "ExpressionStatement",
                  "src": "888:18:7"
                },
                {
                  "id": 1504,
                  "nodeType": "PlaceholderStatement",
                  "src": "916:1:7"
                }
              ]
            },
            "documentation": {
              "id": 1497,
              "nodeType": "StructuredDocumentation",
              "src": "810:42:7",
              "text": "Define a function modifier 'onlyOwner'"
            },
            "id": 1506,
            "name": "onlyOwner",
            "nameLocation": "866:9:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:2:7"
            },
            "src": "857:67:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1517,
              "nodeType": "Block",
              "src": "1042:47:7",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1512,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1059:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1059:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1514,
                      "name": "origOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1463,
                      "src": "1073:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1059:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1511,
                  "id": 1516,
                  "nodeType": "Return",
                  "src": "1052:30:7"
                }
              ]
            },
            "documentation": {
              "id": 1507,
              "nodeType": "StructuredDocumentation",
              "src": "930:61:7",
              "text": "Check if the calling address is the owner of the contract"
            },
            "functionSelector": "8f32d59b",
            "id": 1518,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nameLocation": "1005:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:2:7"
            },
            "returnParameters": {
              "id": 1511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1510,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1518,
                  "src": "1036:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1509,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1035:6:7"
            },
            "scope": 1579,
            "src": "996:93:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1539,
              "nodeType": "Block",
              "src": "1188:94:7",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1525,
                        "name": "origOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "1221:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1240:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1232:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1526,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1232:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1232:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1524,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1469,
                      "src": "1203:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:40:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1531,
                  "nodeType": "EmitStatement",
                  "src": "1198:45:7"
                },
                {
                  "expression": {
                    "id": 1537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1532,
                      "name": "origOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1463,
                      "src": "1253:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1273:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1265:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1265:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1265:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1253:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1538,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:22:7"
                }
              ]
            },
            "documentation": {
              "id": 1519,
              "nodeType": "StructuredDocumentation",
              "src": "1095:42:7",
              "text": "Define a function to renounce ownerhip"
            },
            "functionSelector": "715018a6",
            "id": 1540,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1522,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1521,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1506,
                  "src": "1178:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1178:9:7"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "1151:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1168:2:7"
            },
            "returnParameters": {
              "id": 1523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1188:0:7"
            },
            "scope": 1579,
            "src": "1142:140:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1552,
              "nodeType": "Block",
              "src": "1405:45:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1549,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "1434:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1548,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1578,
                      "src": "1415:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1415:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:28:7"
                }
              ]
            },
            "documentation": {
              "id": 1541,
              "nodeType": "StructuredDocumentation",
              "src": "1288:50:7",
              "text": "Define a public function to transfer ownership"
            },
            "functionSelector": "f2fde38b",
            "id": 1553,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1546,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1545,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1506,
                  "src": "1395:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1395:9:7"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "1352:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1543,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1378:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "1370:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1369:18:7"
            },
            "returnParameters": {
              "id": 1547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:0:7"
            },
            "scope": 1579,
            "src": "1343:107:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1577,
              "nodeType": "Block",
              "src": "1569:131:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1560,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1556,
                          "src": "1587:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1607:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1599:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1561,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1599:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1599:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1587:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1579:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1579:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1567,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:31:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1569,
                        "name": "origOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "1643:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1570,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1556,
                        "src": "1654:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1568,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1469,
                      "src": "1625:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1625:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1572,
                  "nodeType": "EmitStatement",
                  "src": "1620:43:7"
                },
                {
                  "expression": {
                    "id": 1575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1573,
                      "name": "origOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1463,
                      "src": "1673:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1574,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1556,
                      "src": "1685:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1673:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1576,
                  "nodeType": "ExpressionStatement",
                  "src": "1673:20:7"
                }
              ]
            },
            "documentation": {
              "id": 1554,
              "nodeType": "StructuredDocumentation",
              "src": "1456:53:7",
              "text": "Define an internal function to transfer ownership"
            },
            "id": 1578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferOwnership",
            "nameLocation": "1523:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1550:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1578,
                  "src": "1542:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1541:18:7"
            },
            "returnParameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1569:0:7"
            },
            "scope": 1579,
            "src": "1514:186:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1580,
        "src": "309:1393:7",
        "usedErrors": []
      }
    ],
    "src": "40:1663:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-07-10T20:09:10.393Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Assign the contract to an owner"
      },
      "isOwner()": {
        "notice": "Check if the calling address is the owner of the contract"
      },
      "owner()": {
        "notice": "Look up the address of the owner"
      },
      "renounceOwnership()": {
        "notice": "Define a function to renounce ownerhip"
      },
      "transferOwnership(address)": {
        "notice": "Define a public function to transfer ownership"
      }
    },
    "notice": "Provides basic authorization control",
    "version": 1
  }
}